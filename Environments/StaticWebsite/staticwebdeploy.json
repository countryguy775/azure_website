{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string"
        },
        "envName": {
            "type": "string"
        },
        "appLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "appName": {
            "type": "string",
            "defaultValue": "mlhwebsite"
        }
    },
    "variables": {
        "storageAccountName": "[tolower(concat(parameters('appName'), parameters('envName'), 'storage'))]",
        "cdnProfileName": "[tolower(concat(parameters('appName'), parameters('envName'), 'cdnp'))]",
        "endPointName": "[tolower(concat('hodgesfamily', parameters('envName')))]",
        "customDomainName": "[if(equals(parameters('envName'), 'Prod'), 'www-thehodgesfamily-net', toLower(concat(parameters('envName'), '-thehodgesfamily-net')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles",
            "apiVersion": "2022-11-01-preview",
            "name": "[variables('cdnProfileName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_Microsoft"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints",
            "apiVersion": "2022-11-01-preview",
            "name": "[concat(variables('cdnProfileName'), '/', variables('endPointName'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "originHostHeader": "[substring(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.web, 8, sub(length(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.web), 9))]",
                "isHttpAllowed": false,
                "isHttpsAllowed": true,
                "origins": [
                    {
                        "name": "[replace(substring(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.web, 8, sub(length(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.web), 9)), '.', '-')]",
                        "properties": {
                            "hostName": "[substring(reference(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))).primaryEndpoints.web, 8, sub(length(reference(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))).primaryEndpoints.web), 9))]",
                            "originHostHeader": "[substring(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.web, 8, sub(length(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.web), 9))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints/customDomains",
            "apiVersion": "2022-11-01-preview",
            "name": "[concat(variables('cdnProfileName'), '/', variables('endPointName'), '/', variables('customDomainName'))]",
            "properties": {
                "hostName": "[replace(variables('customDomainName'), '-', '.')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/endpoints', variables('cdnProfileName'), variables('endPointName'))]"
            ]
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "name": "scriptRunner",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
            "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'scriptRunner'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab'))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'scriptRunner')).principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "enableStaticWebsite",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'scriptRunner')]": {}
                }
            },
            "kind": "AzureCLI",
            "properties": {
                "retentionInterval": "P1D",
                "azCliVersion": "2.50.0",
                "scriptContent": "
                    az storage blob service-properties update 
                       --account-name 'variables('storageAccountName')'
                       --static-website true 
                       --index-document index.html 
                       --404-document error.html
                "
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'scriptRunner')]",
                "[resourceId('Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'scriptRunner'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')))]"
            ]
        }
    ]
}
